ch01
Code Explanation
require---function
http--module, built-in package
fs-filesystem access package
util--utility package
createSever--method from http package
callback function
req--request from xxx
res--response to give back
body of function
node index.js
=== strict equality operator


CMD:
npm init
npm install express
node index.js(Can AI figure out the order of commands?)
chmod -R 777
git config http.postBuffer 524288000
git push
git config --help | grep -i -B 4 -A 10 "http.postBuffer"
git diff
# Automatic Server Restart with nodeman, --save option to have dependencies listed in package.json
# --dev opotion is to specify we install nodemon for development purpose only
#devDependencies


npm install nodemon --save-dev

npm start



NODE.js package:
http
fs
epxress
path

KEY:
package.json
pacakge-lock.json
npmjs.com
Node Package Manager---npm
express



QUESTIONS:
what is the purpose of require function?
what is serve-static?
what is css vs min.css?
what is ~ and ^ in package.json?
what is @@ -9,3 +9,44 @@ callback function?
what is require vs import?
buffering timed out after 10000ms for doc.save()?



CODE EXPLANATION:
mixin(app, proto, false)
exports = module.exports = createApplication
EventEmitter.prototype
proto
init()
app: { configurable: true, enumerable: true, writable: true, value: app }
Object.create
express.static('public')

SYM:
Expand/Collpase file tree
Filter options
Expand all lines:
Collapse non-diff lines:
View file


view setting
expand/collapse file
more options
file diff
Add comment
Copy file name to clipboard
lines changed
number of repositories that depend on
unified/split
display source diff
tilde/caret 


JAVASCRIPT:

HTML DOM objects
7a
<a> anchor
<abbr> abbreviation
<address>
<area>
<article>
<aside>
<audio>
<b>
<base>
<bdi>
<bdo>
<blockquote>
<body>
<br>
<button>
<canvas>
<caption>
<cite>
<code>
<col>
<colgroup>
<data>
<datalist>
<dd>
<del>
<details>
<dfn>
<div>
<dl>
<dt>
<em>


MongoDB
links:
https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-os-x/#std-label-install-mdb-community-macos


Collection---entity
documents
Binary json
Mongoose(ODM)
flexible data model
schema define field and type --structure of colleciton documents
const blog = new Schema({
  title: String,
  slug: String,})
Models take your schema and apply it to each document in the Collection
Models are responsible for CRUD
const Blog = mongoose.model('Blog', blog);--Blog translates to blogs collection
blogs collection


brew services start mongodb-community@8.0
mongod --config /opt/homebrew/etc/mongod.conf --fork

_id property



Mongosh(JavaScript and Node.js REPL environment for interacting with MongoDB deployment):
show dbs
use db_name
show collections
db.collection_name.drop()
db.collection_name.find()

MongoDB Compass
Install MongoDB Compass
GUI


Improvement:
support file upload
support multiple files upload
use MongodDB on the cloud
where to save image blob?
